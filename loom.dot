{@ traces, funcs}
{%
	local loom = require 'jit.loom'
	local funcinfo = require ('jit.util').funcinfo
	local nodeshape = {
		none = 'shape=none',
		root = 'shape=ellipse',
		loop = 'penwidth=3.0',
		['tail-recursion'] = 'shape=diamond',
		['up-recursion'] = 'shape=house',
		['down-recursion'] = 'ishape=nvhouse',
		interpreter = 'shape=egg',
		['return'] = 'shape=parallelogram',
		stitch = 'shape=Mdiamond',
	}
%}
digraph G {
	{% for i, tr in loom.allipairs(traces) do
		local entryinfo = funcinfo(tr.rec[1][1], tr.rec[1][2])
		local shape = nodeshape[tr.info.linktype] or 'circle' %}
		T{{ i }} [{{ shape }}, label="#{{ i }}\n{{ entryinfo.loc }}", href="#tr{{ i }}"]
	{% end %}

	{% for i, tr in loom.allipairs(traces) do %}
		{% if false and tr.info.linktype == 'loop' then %}
			T{{ i }} -> T{{ i }};
		{% end %}
		{% if tr.parent and tr.p_exit and tr.p_exit>0 then %}
			T{{ tr.parent }} -> T{{ i }} [taillabel=">{{ tr.p_exit }}"];
		{% end %}
		{% if tonumber(tr.info.link) then %}
			T{{ i }} -> T{{ tr.info.link }} [dir=both, arrowtail=odot];
		{% end %}
	{% end %}

}
